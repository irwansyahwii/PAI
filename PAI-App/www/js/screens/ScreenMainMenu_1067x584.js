// Generated by CoffeeScript 1.9.2
(function() {
  var ClickEffect, ScreenBase, ScreenMainMenu_1067x584, curvein, curvemove, curveout,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ScreenBase = require("./ScreenBase_1067x584");

  ClickEffect = require("./ClickEffect");

  curvemove = 'cubic-bezier(0.4, 0, 0.2, 1)';

  curvein = 'cubic-bezier(0, 0, 0.2, 1)';

  curveout = 'cubic-bezier(0.4, 0, 1, 1)';

  ScreenMainMenu_1067x584 = (function(superClass) {
    extend(ScreenMainMenu_1067x584, superClass);

    function ScreenMainMenu_1067x584() {
      this.play = bind(this.play, this);
      this.init = bind(this.init, this);
      this.onContactLayerClicked = bind(this.onContactLayerClicked, this);
      this.onProjectsLayerClicked = bind(this.onProjectsLayerClicked, this);
      this.onPersonnelLayerClicked = bind(this.onPersonnelLayerClicked, this);
      this.onProfileLayerClicked = bind(this.onProfileLayerClicked, this);
      this.hideAllMenuLayers = bind(this.hideAllMenuLayers, this);
      this.topBarLayerOnStateDidSwitch = bind(this.topBarLayerOnStateDidSwitch, this);
      this.onButtonPAILayerClicked = bind(this.onButtonPAILayerClicked, this);
      this.initTopBarLayer = bind(this.initTopBarLayer, this);
      this.onProfileLayerStateDidSwitch = bind(this.onProfileLayerStateDidSwitch, this);
      this.initProfileLayer = bind(this.initProfileLayer, this);
      this.initPersonnelLayer = bind(this.initPersonnelLayer, this);
      this.initProjectsLayer = bind(this.initProjectsLayer, this);
      this.initContactLayer = bind(this.initContactLayer, this);
      this.destroyCurrentSubMenuScreen = bind(this.destroyCurrentSubMenuScreen, this);
      ScreenMainMenu_1067x584.__super__.constructor.apply(this, arguments);
      this.subMenuScreen = null;
      this.topBarLayer = new Layer({
        image: 'images/TopBarWithLogo.png',
        width: this.width + 4,
        height: 76 + 4
      });
      this.topBarLayer.superLayer = this.mainLayer;
      this.topBarLayer.centerX();
      this.buttonPAILayer = new Layer({
        image: 'images/ButtonPAI.png',
        width: 91,
        height: 74,
        x: 522,
        y: 1
      });
      this.buttonPAILayer.superLayer = this.topBarLayer;
      this.profileLayer = new Layer({
        image: 'images/MainMenu-Profile.png',
        width: 532,
        height: 250
      });
      this.profileLayer.superLayer = this.mainLayer;
      this.personnelLayer = new Layer({
        image: 'images/MainMenu-Personnel.png',
        width: 533,
        height: 255
      });
      this.personnelLayer.superLayer = this.mainLayer;
      this.projectsLayer = new Layer({
        image: 'images/MainMenu-Projects.png',
        width: 531,
        height: 250
      });
      this.projectsLayer.superLayer = this.mainLayer;
      this.contactLayer = new Layer({
        image: 'images/MainMenu-Contact.png',
        width: 532,
        height: 255
      });
      this.contactLayer.superLayer = this.mainLayer;
      this.disableStateSwitching = false;
    }

    ScreenMainMenu_1067x584.prototype.destroyCurrentSubMenuScreen = function() {
      if (this.subMenuScreen !== null) {
        this.subMenuScreen.destroy();
        return this.subMenuScreen = null;
      }
    };

    ScreenMainMenu_1067x584.prototype.initContactLayer = function() {
      this.contactLayer.states.add({
        left_outside: {
          x: this.mainLayer.width + this.contactLayer.width,
          y: this.projectsLayer.height + this.projectsLayer.y
        },
        on_left: {
          x: this.profileLayer.width + 3,
          y: this.projectsLayer.height + this.projectsLayer.y + 2
        }
      });
      this.contactLayer.states.animationOptions = {
        time: 0.2,
        curve: "spring(40, 0, 0)"
      };
      this.contactLayer.states.switchInstant("left_outside");
      this.contactLayer.on(Events.Click, this.onContactLayerClicked);
      return ClickEffect.addTo(this.contactLayer);
    };

    ScreenMainMenu_1067x584.prototype.initProjectsLayer = function() {
      this.projectsLayer.states.add({
        left_outside: {
          x: this.mainLayer.width + this.projectsLayer.width,
          y: this.topBarLayer.height
        },
        on_left: {
          x: this.profileLayer.width + 3,
          y: this.topBarLayer.height
        }
      });
      this.projectsLayer.states.animationOptions = {
        time: 0.2,
        curve: "spring(40, 0, 0)"
      };
      this.projectsLayer.states.switchInstant("left_outside");
      this.projectsLayer.on(Events.Click, this.onProjectsLayerClicked);
      return ClickEffect.addTo(this.projectsLayer);
    };

    ScreenMainMenu_1067x584.prototype.initPersonnelLayer = function() {
      this.personnelLayer.states.add({
        left_outside: {
          x: this.personnelLayer.width * -1 - 10,
          y: this.profileLayer.y + this.profileLayer.height
        },
        on_left: {
          x: 0,
          y: this.profileLayer.y + this.profileLayer.height + 2
        }
      });
      this.personnelLayer.states.animationOptions = {
        time: 0.2,
        curve: "spring(40, 0, 0)"
      };
      this.personnelLayer.states.switchInstant("left_outside");
      this.personnelLayer.on(Events.Click, this.onPersonnelLayerClicked);
      return ClickEffect.addTo(this.personnelLayer);
    };

    ScreenMainMenu_1067x584.prototype.initProfileLayer = function() {
      this.profileLayer.states.add({
        left_outside: {
          x: this.profileLayer.width * -1 - 10,
          y: this.topBarLayer.height
        },
        on_left: {
          x: 0,
          y: this.topBarLayer.height
        }
      });
      this.profileLayer.states.animationOptions = {
        time: 0.2,
        curve: "spring(40, 0, 0)"
      };
      this.profileLayer.states.switchInstant("left_outside");
      this.profileLayer.on(Events.Click, this.onProfileLayerClicked);
      ClickEffect.addTo(this.profileLayer);
      return this.profileLayer.on(Events.StateDidSwitch, this.onProfileLayerStateDidSwitch);
    };

    ScreenMainMenu_1067x584.prototype.onProfileLayerStateDidSwitch = function() {
      return this.mainLayer.backgroundColor = "white";
    };

    ScreenMainMenu_1067x584.prototype.initTopBarLayer = function() {
      this.topBarLayer.states.add({
        hidden: {
          x: -2,
          y: this.topBarLayer.height * -1
        },
        shown: {
          x: -2,
          y: -2
        },
        top_outside: {
          x: -2,
          y: this.topBarLayer.height * -1
        },
        on_top: {
          x: -2,
          y: -2
        }
      });
      this.topBarLayer.states.switchInstant("top_outside");
      this.topBarLayer.states.animationOptions = {
        time: 0.3,
        curve: "ease"
      };
      this.topBarLayer.on(Events.StateDidSwitch, this.topBarLayerOnStateDidSwitch);
      ClickEffect.addTo(this.buttonPAILayer);
      return this.buttonPAILayer.on(Events.Click, this.onButtonPAILayerClicked);
    };

    ScreenMainMenu_1067x584.prototype.onButtonPAILayerClicked = function() {
      if (this.delegate) {
        return this.delegate.afterButtonPAILayerClicked();
      }
    };

    ScreenMainMenu_1067x584.prototype.topBarLayerOnStateDidSwitch = function(e, stateName) {
      if (this.disableStateSwitching) {
        return;
      }
      if (stateName === "on_top") {
        console.log("stateName: " + stateName + ", showing menu buttons");
        this.profileLayer.states["switch"]("on_left");
        this.personnelLayer.states["switch"]("on_left");
        this.projectsLayer.states["switch"]("on_left");
        return this.contactLayer.states["switch"]("on_left");
      }
    };

    ScreenMainMenu_1067x584.prototype.hideAllMenuLayers = function() {
      this.profileLayer.states["switch"]("left_outside");
      this.personnelLayer.states["switch"]("left_outside");
      this.projectsLayer.states["switch"]("left_outside");
      this.contactLayer.states["switch"]("left_outside");
      return this.mainLayer.backgroundColor = "black";
    };

    ScreenMainMenu_1067x584.prototype.onProfileLayerClicked = function(event, layer) {
      this.hideAllMenuLayers();
      if (this.delegate) {
        return this.delegate.afterProfileButtonClicked(self);
      }
    };

    ScreenMainMenu_1067x584.prototype.onPersonnelLayerClicked = function(event, layer) {
      this.hideAllMenuLayers();
      if (this.delegate) {
        return this.delegate.afterPersonnelButtonClicked(self);
      }
    };

    ScreenMainMenu_1067x584.prototype.onProjectsLayerClicked = function(event, layer) {
      this.hideAllMenuLayers();
      if (this.delegate) {
        return this.delegate.afterProjectsButtonClicked(self);
      }
    };

    ScreenMainMenu_1067x584.prototype.onContactLayerClicked = function(event, layer) {
      this.hideAllMenuLayers();
      if (this.delegate) {
        return this.delegate.afterContactButtonClicked(self);
      }
    };

    ScreenMainMenu_1067x584.prototype.init = function() {
      ScreenMainMenu_1067x584.__super__.init.apply(this, arguments);
      this.initTopBarLayer();
      this.initProfileLayer();
      this.initPersonnelLayer();
      this.initProjectsLayer();
      return this.initContactLayer();
    };

    ScreenMainMenu_1067x584.prototype.play = function() {
      return this.topBarLayer.states["switch"]("on_top");
    };

    return ScreenMainMenu_1067x584;

  })(ScreenBase);

  module.exports = ScreenMainMenu_1067x584;

}).call(this);
