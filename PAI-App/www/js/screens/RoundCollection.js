// Generated by CoffeeScript 1.9.2
(function() {
  var RoundCollection,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  RoundCollection = (function() {
    function RoundCollection() {
      this.current = bind(this.current, this);
      this.prev = bind(this.prev, this);
      this.next = bind(this.next, this);
      this.add = bind(this.add, this);
      this.list = [];
      this.current_index = 0;
      console.log("constructor : @current_index: " + this.current_index);
    }

    RoundCollection.prototype.add = function(item) {
      return this.list.push(item);
    };

    RoundCollection.prototype.next = function() {
      this.current_index += 1;
      if (this.current_index >= this.list.length) {
        this.current_index = 0;
      }
      console.log("next() : @current_index: " + this.current_index);
      return this.list[this.current_index];
    };

    RoundCollection.prototype.prev = function() {
      this.current_index -= this.current_index < 0 ? this.current_index = this.list.length - 1 : void 0;
      console.log("prev() : @current_index: " + this.current_index);
      return this.list[this.current_index];
    };

    RoundCollection.prototype.current = function() {
      return this.list[this.current_index];
    };

    return RoundCollection;

  })();

  module.exports = RoundCollection;

}).call(this);
