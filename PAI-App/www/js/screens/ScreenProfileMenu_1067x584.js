// Generated by CoffeeScript 1.9.2
(function() {
  var ClickEffect, ScreenBase, ScreenMainMenu_1067x584,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ScreenBase = require("./ScreenBase_1067x584");

  ClickEffect = require("./ClickEffect");

  ScreenMainMenu_1067x584 = (function(superClass) {
    extend(ScreenMainMenu_1067x584, superClass);

    function ScreenMainMenu_1067x584(options) {
      this.play = bind(this.play, this);
      this.onPhilosophyButtonClicked = bind(this.onPhilosophyButtonClicked, this);
      this.onFirmDescriptionButtonClicked = bind(this.onFirmDescriptionButtonClicked, this);
      this.onBackButtonClicked = bind(this.onBackButtonClicked, this);
      this.hideAllLayers = bind(this.hideAllLayers, this);
      this.onFirmDescriptionStateDidSwitch = bind(this.onFirmDescriptionStateDidSwitch, this);
      this.init = bind(this.init, this);
      ScreenMainMenu_1067x584.__super__.constructor.apply(this, arguments);
      this.parent_screen = options.parent_screen || {};
      if (this.parent_screen) {
        this.mainLayer.superLayer = this.parent_screen.mainLayer;
        this.mainLayer.placeBehind(this.parent_screen.topBarLayer);
      }
      this.mainLayer.backgroundColor = 'white';
      this.headerLayer = new Layer({
        image: 'images/ProfileMenu-Header-Template.png',
        x: 0,
        y: this.parent_screen.topBarLayer.height - 1,
        width: this.width + 1,
        height: 37
      });
      this.headerLayer.superLayer = this.mainLayer;
      this.headerLayer.centerX();
      this.backButtonLayer = new Layer({
        image: 'images/ProfileMenu-Back.png',
        x: 19,
        y: 7,
        width: 45,
        height: 20
      });
      this.backButtonLayer.superLayer = this.headerLayer;
      this.profileTitleLayer = new Layer({
        image: 'images/ProfileMenu-Profile.png',
        x: 500,
        y: 7,
        width: 69,
        height: 27
      });
      this.profileTitleLayer.superLayer = this.headerLayer;
      this.firmDescriptionButton = new Layer({
        image: 'images/ProfileMenu-FirmDescription.png',
        width: this.width,
        height: 233
      });
      this.firmDescriptionButton.superLayer = this.mainLayer;
      this.philosophyButton = new Layer({
        image: 'images/ProfileMenu-Philosophy.png',
        width: this.width,
        height: 236
      });
      this.philosophyButton.superLayer = this.mainLayer;
    }

    ScreenMainMenu_1067x584.prototype.init = function() {
      ScreenMainMenu_1067x584.__super__.init.apply(this, arguments);
      this.headerLayer.states.add({
        top_outside: {
          y: -this.headerLayer.height * -1 - 5
        },
        on_top: {
          y: this.parent_screen.topBarLayer.height - 1
        }
      });
      this.headerLayer.states.switchInstant("top_outside");
      this.firmDescriptionButton.states.add({
        left_outside: {
          x: this.firmDescriptionButton.width * -1 - 5,
          y: 114
        },
        on_top: {
          x: 0
        }
      });
      this.firmDescriptionButton.states.switchInstant("left_outside");
      this.philosophyButton.states.add({
        right_outside: {
          x: this.philosophyButton.width + 5,
          y: 348
        },
        on_bottom: {
          x: 0
        }
      });
      this.philosophyButton.states.switchInstant("right_outside");
      ClickEffect.addTo(this.backButtonLayer);
      ClickEffect.addTo(this.firmDescriptionButton);
      ClickEffect.addTo(this.philosophyButton);
      this.backButtonLayer.on(Events.Click, this.onBackButtonClicked);
      this.firmDescriptionButton.on(Events.Click, this.onFirmDescriptionButtonClicked);
      this.philosophyButton.on(Events.Click, this.onPhilosophyButtonClicked);
      this.headerLayer.states.animationOptions = {
        time: 0.5
      };
      this.firmDescriptionButton.states.animationOptions = {
        time: 0.5
      };
      this.philosophyButton.states.animationOptions = {
        time: 0.5
      };
      return this.firmDescriptionButton.on(Events.StateDidSwitch, this.onFirmDescriptionStateDidSwitch);
    };

    ScreenMainMenu_1067x584.prototype.onFirmDescriptionStateDidSwitch = function(e, stateName) {
      if (stateName === "on_top") {
        return this.headerLayer.states["switch"]("on_top");
      }
    };

    ScreenMainMenu_1067x584.prototype.hideAllLayers = function() {
      this.headerLayer.states["switch"]("top_outside");
      this.firmDescriptionButton.states["switch"]("left_outside");
      return this.philosophyButton.states["switch"]("right_outside");
    };

    ScreenMainMenu_1067x584.prototype.onBackButtonClicked = function() {};

    ScreenMainMenu_1067x584.prototype.onFirmDescriptionButtonClicked = function() {
      return this.hideAllLayers();
    };

    ScreenMainMenu_1067x584.prototype.onPhilosophyButtonClicked = function() {
      return this.hideAllLayers();
    };

    ScreenMainMenu_1067x584.prototype.play = function() {
      this.show();
      this.firmDescriptionButton.states["switch"]("on_top");
      return this.philosophyButton.states["switch"]("on_bottom");
    };

    return ScreenMainMenu_1067x584;

  })(ScreenBase);

  module.exports = ScreenMainMenu_1067x584;

}).call(this);
